/*去重操作
有如下数组：arr = [1,2,1,3,2,4,5,5,6,7];
编写代码，去除数组中重复的元素-->[1,2,3,,4,5,6,7]*/
const arr = [1,2,1,3,2,4,5,5,6,7];
// //分别获取数组中的元素
for(let i = 0;i<arr.length;i++){
    // console.log(arr[i]);
    //获取当前值后边的所有值
    for(let j =i+1;j<arr.length;j++){
        // console.log(arr[j]);
        //判断两个数是否相等
        //如果相等，则说明出现了重复元素
        if(arr[i]===arr[j]){
            //出现了重复元素，则删除后边的元素（这个步骤我不知道）
            arr.splice(j,1);
        }
    }    
}
console.log(arr);//[ 1, 3, 4, 5, 7 ]
/*以上代码出现的问题：当arr[i]和arr[j]相同时，它会自动删除j位置的元素，再把j+1的位置编程j位置的元素，
但是由于j位置的元素已经比较过了，所以不会重复比较，会出现漏比较的情况 */
/*解决办法：当删除一个元素后，需要将该位置的元素再比较一遍 */
const arr1 = [1,2,1,3,2,4,5,5,6,7];
//分别获取数组中的元素
for(let i = 0;i<arr1.length;i++){
    // console.log(arr[i]);
    //获取当前值后边的所有值
    for(let j =i+1;j<arr1.length;j++){
        // console.log(arr[j]);
        //判断两个数是否相等
        //如果相等，则说明出现了重复元素
        if(arr1[i]===arr1[j]){
            //出现了重复元素，则删除后边的元素（这个步骤我自己写时不知道）
            arr1.splice(j,1);
            j--;
        }
        
    }    
}
console.log(arr1);//[1, 2, 3, 4,5, 6, 7]