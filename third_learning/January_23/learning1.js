/*第一遍理解记忆：2023-1-23*/
/*递归 */
//1、概念：调用自身的函数
// function fn(){
//     fn();
// }
// fn();
//2、作用：和循环基本一致
//需求：创建一个函数，求任意数的阶乘
function jieCheng(num){
    //创建一个变量来记录结果
    let r= 1;
    for(let i=2;i<=num;i++){
        r = r * i;
    }
    return r;
}
let r= jieCheng(3);
console.log(r);
//如何用递归来解决阶乘？
//5!=4!*5; 4!=3!*4;3！=2！*3；2！=1！*2；1！=1；
//3、核心思想：将一个大问题拆分为一个一个小的问题，小问题解决了，大问题也解决了
//4、要件：
//（1）基线条件：递归终止条件
function jieCheng2(num){
    //基线条件
    if(num===1){
        return 1;
    }
//（2）递归条件：拆分问题
    //递归条件：num! = (num-1)! * num
    return jieCheng2(num-1) * num;
}
r = jieCheng2(5);
console.log(r);
//5、注意：递归作用和循环一致，但是递归的思路清晰简洁，而循环的执行性能较好；
//在开发中，一般问题都可以通过循环解决，多用循环少用递归